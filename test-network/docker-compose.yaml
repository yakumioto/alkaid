version: '2.0'
networks:
  byfn: {}
services:
  orderer.example.com:
    command: orderer
    container_name: orderer.example.com
    environment:
      FABRIC_LOGGING_SPEC: INFO
      ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_CLUSTER_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_GENERAL_GENESISFILE: /var/hyperledger/orderer/orderer.genesis.block
      ORDERER_GENERAL_GENESISMETHOD: file
      ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
      ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/orderer/msp
      ORDERER_GENERAL_LOCALMSPID: OrdererMSP
      ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_TLS_ENABLED: "true"
      ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_TLS_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR: '1'
      ORDERER_KAFKA_VERBOSE: "true"
    image: hyperledger/fabric-orderer:latest
    networks:
      byfn: {}
    ports:
      - 7050:7050/tcp
    volumes:
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp:rw
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block:rw
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls:/var/hyperledger/orderer/tls:rw
      - orderer.example.com:/var/hyperledger/production/orderer:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
  orderer2.example.com:
    command: orderer
    container_name: orderer2.example.com
    environment:
      FABRIC_LOGGING_SPEC: INFO
      ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_CLUSTER_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_GENERAL_GENESISFILE: /var/hyperledger/orderer/orderer.genesis.block
      ORDERER_GENERAL_GENESISMETHOD: file
      ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
      ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/orderer/msp
      ORDERER_GENERAL_LOCALMSPID: OrdererMSP
      ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_TLS_ENABLED: "true"
      ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_TLS_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR: '1'
      ORDERER_KAFKA_VERBOSE: "true"
    image: hyperledger/fabric-orderer:latest
    networks:
      byfn: {}
    ports:
      - 8050:7050/tcp
    volumes:
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/orderer/msp:rw
      - ./channel-artifacts/newGenesis.block:/var/hyperledger/orderer/orderer.genesis.block:rw
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls:/var/hyperledger/orderer/tls:rw
      - orderer2.example.com:/var/hyperledger/production/orderer:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
  orderer3.example.com:
    command: orderer
    container_name: orderer3.example.com
    environment:
      FABRIC_LOGGING_SPEC: INFO
      ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_CLUSTER_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_GENERAL_GENESISFILE: /var/hyperledger/orderer/orderer.genesis.block
      ORDERER_GENERAL_GENESISMETHOD: file
      ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
      ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/orderer/msp
      ORDERER_GENERAL_LOCALMSPID: OrdererMSP
      ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_TLS_ENABLED: "true"
      ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_TLS_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR: '1'
      ORDERER_KAFKA_VERBOSE: "true"
    image: hyperledger/fabric-orderer:latest
    networks:
      byfn: {}
    ports:
      - 9050:7050/tcp
    volumes:
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/msp:/var/hyperledger/orderer/msp:rw
      - ./channel-artifacts/newGenesis.block:/var/hyperledger/orderer/orderer.genesis.block:rw
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls:/var/hyperledger/orderer/tls:rw
      - orderer3.example.com:/var/hyperledger/production/orderer:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
  orderer4.example.com:
    command: orderer
    container_name: orderer4.example.com
    environment:
      FABRIC_LOGGING_SPEC: INFO
      ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_CLUSTER_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_GENERAL_GENESISFILE: /var/hyperledger/orderer/orderer.genesis.block
      ORDERER_GENERAL_GENESISMETHOD: file
      ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
      ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/orderer/msp
      ORDERER_GENERAL_LOCALMSPID: OrdererMSP
      ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_TLS_ENABLED: "true"
      ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_TLS_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR: '1'
      ORDERER_KAFKA_VERBOSE: "true"
    image: hyperledger/fabric-orderer:latest
    networks:
      byfn: {}
    ports:
      - 10050:7050/tcp
    volumes:
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/msp:/var/hyperledger/orderer/msp:rw
      - ./channel-artifacts/newGenesis.block:/var/hyperledger/orderer/orderer.genesis.block:rw
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls:/var/hyperledger/orderer/tls:rw
      - orderer4.example.com:/var/hyperledger/production/orderer:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
  orderer5.example.com:
    command: orderer
    container_name: orderer5.example.com
    environment:
      FABRIC_LOGGING_SPEC: INFO
      ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_CLUSTER_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_GENERAL_GENESISFILE: /var/hyperledger/orderer/orderer.genesis.block
      ORDERER_GENERAL_GENESISMETHOD: file
      ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
      ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/orderer/msp
      ORDERER_GENERAL_LOCALMSPID: OrdererMSP
      ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/orderer/tls/server.crt
      ORDERER_GENERAL_TLS_ENABLED: "true"
      ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/orderer/tls/server.key
      ORDERER_GENERAL_TLS_ROOTCAS: '[/var/hyperledger/orderer/tls/ca.crt]'
      ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR: '1'
      ORDERER_KAFKA_VERBOSE: "true"
    image: hyperledger/fabric-orderer:latest
    networks:
      byfn: {}
    ports:
      - 11050:7050/tcp
    volumes:
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/msp:/var/hyperledger/orderer/msp:rw
      - ./channel-artifacts/newGenesis.block:/var/hyperledger/orderer/orderer.genesis.block:rw
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls:/var/hyperledger/orderer/tls:rw
      - orderer5.example.com:/var/hyperledger/production/orderer:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
  peer0.org1.example.com:
    command: peer node start
    container_name: peer0.org1.example.com
    environment:
      CORE_PEER_ADDRESS: peer0.org1.example.com:7051
      CORE_PEER_CHAINCODEADDRESS: peer0.org1.example.com:7052
      CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
      CORE_PEER_GOSSIP_BOOTSTRAP: peer1.org1.example.com:8051
      CORE_PEER_GOSSIP_EXTERNALENDPOINT: peer0.org1.example.com:7051
      CORE_PEER_GOSSIP_ORGLEADER: "false"
      CORE_PEER_GOSSIP_USELEADERELECTION: "true"
      CORE_PEER_ID: peer0.org1.example.com
      CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
      CORE_PEER_LOCALMSPID: Org1MSP
      CORE_PEER_PROFILE_ENABLED: "true"
      CORE_PEER_TLS_CERT_FILE: /etc/hyperledger/fabric/tls/server.crt
      CORE_PEER_TLS_ENABLED: "true"
      CORE_PEER_TLS_KEY_FILE: /etc/hyperledger/fabric/tls/server.key
      CORE_PEER_TLS_ROOTCERT_FILE: /etc/hyperledger/fabric/tls/ca.crt
      CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE: test-network_byfn
      CORE_VM_ENDPOINT: unix:///host/var/run/docker.sock
      FABRIC_LOGGING_SPEC: INFO
    image: hyperledger/fabric-peer:latest
    networks:
      byfn: {}
    ports:
      - 7051:7051/tcp
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp:rw
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls:rw
      - /var/run:/host/var/run:rw
      - peer0.org1.example.com:/var/hyperledger/production:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  peer0.org2.example.com:
    command: peer node start
    container_name: peer0.org2.example.com
    environment:
      CORE_PEER_ADDRESS: peer0.org2.example.com:9051
      CORE_PEER_CHAINCODEADDRESS: peer0.org2.example.com:9052
      CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:9052
      CORE_PEER_GOSSIP_BOOTSTRAP: peer1.org2.example.com:10051
      CORE_PEER_GOSSIP_EXTERNALENDPOINT: peer0.org2.example.com:9051
      CORE_PEER_GOSSIP_ORGLEADER: "false"
      CORE_PEER_GOSSIP_USELEADERELECTION: "true"
      CORE_PEER_ID: peer0.org2.example.com
      CORE_PEER_LISTENADDRESS: 0.0.0.0:9051
      CORE_PEER_LOCALMSPID: Org2MSP
      CORE_PEER_PROFILE_ENABLED: "true"
      CORE_PEER_TLS_CERT_FILE: /etc/hyperledger/fabric/tls/server.crt
      CORE_PEER_TLS_ENABLED: "true"
      CORE_PEER_TLS_KEY_FILE: /etc/hyperledger/fabric/tls/server.key
      CORE_PEER_TLS_ROOTCERT_FILE: /etc/hyperledger/fabric/tls/ca.crt
      CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE: test-network_byfn
      CORE_VM_ENDPOINT: unix:///host/var/run/docker.sock
      FABRIC_LOGGING_SPEC: INFO
    image: hyperledger/fabric-peer:latest
    networks:
      byfn: {}
    ports:
      - 9051:9051/tcp
    volumes:
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp:rw
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/fabric/tls:rw
      - /var/run:/host/var/run:rw
      - peer0.org2.example.com:/var/hyperledger/production:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  peer1.org1.example.com:
    command: peer node start
    container_name: peer1.org1.example.com
    environment:
      CORE_PEER_ADDRESS: peer1.org1.example.com:8051
      CORE_PEER_CHAINCODEADDRESS: peer1.org1.example.com:8052
      CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:8052
      CORE_PEER_GOSSIP_BOOTSTRAP: peer0.org1.example.com:7051
      CORE_PEER_GOSSIP_EXTERNALENDPOINT: peer1.org1.example.com:8051
      CORE_PEER_GOSSIP_ORGLEADER: "false"
      CORE_PEER_GOSSIP_USELEADERELECTION: "true"
      CORE_PEER_ID: peer1.org1.example.com
      CORE_PEER_LISTENADDRESS: 0.0.0.0:8051
      CORE_PEER_LOCALMSPID: Org1MSP
      CORE_PEER_PROFILE_ENABLED: "true"
      CORE_PEER_TLS_CERT_FILE: /etc/hyperledger/fabric/tls/server.crt
      CORE_PEER_TLS_ENABLED: "true"
      CORE_PEER_TLS_KEY_FILE: /etc/hyperledger/fabric/tls/server.key
      CORE_PEER_TLS_ROOTCERT_FILE: /etc/hyperledger/fabric/tls/ca.crt
      CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE: test-network_byfn
      CORE_VM_ENDPOINT: unix:///host/var/run/docker.sock
      FABRIC_LOGGING_SPEC: INFO
    image: hyperledger/fabric-peer:latest
    networks:
      byfn: {}
    ports:
      - 8051:8051/tcp
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/etc/hyperledger/fabric/msp:rw
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls:/etc/hyperledger/fabric/tls:rw
      - /var/run:/host/var/run:rw
      - peer1.org1.example.com:/var/hyperledger/production:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  peer1.org2.example.com:
    command: peer node start
    container_name: peer1.org2.example.com
    environment:
      CORE_PEER_ADDRESS: peer1.org2.example.com:10051
      CORE_PEER_CHAINCODEADDRESS: peer1.org2.example.com:10052
      CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:10052
      CORE_PEER_GOSSIP_BOOTSTRAP: peer0.org2.example.com:9051
      CORE_PEER_GOSSIP_EXTERNALENDPOINT: peer1.org2.example.com:10051
      CORE_PEER_GOSSIP_ORGLEADER: "false"
      CORE_PEER_GOSSIP_USELEADERELECTION: "true"
      CORE_PEER_ID: peer1.org2.example.com
      CORE_PEER_LISTENADDRESS: 0.0.0.0:10051
      CORE_PEER_LOCALMSPID: Org2MSP
      CORE_PEER_PROFILE_ENABLED: "true"
      CORE_PEER_TLS_CERT_FILE: /etc/hyperledger/fabric/tls/server.crt
      CORE_PEER_TLS_ENABLED: "true"
      CORE_PEER_TLS_KEY_FILE: /etc/hyperledger/fabric/tls/server.key
      CORE_PEER_TLS_ROOTCERT_FILE: /etc/hyperledger/fabric/tls/ca.crt
      CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE: test-network_byfn
      CORE_VM_ENDPOINT: unix:///host/var/run/docker.sock
      FABRIC_LOGGING_SPEC: INFO
    image: hyperledger/fabric-peer:latest
    networks:
      byfn: {}
    ports:
      - 10051:10051/tcp
    volumes:
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp:/etc/hyperledger/fabric/msp:rw
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls:/etc/hyperledger/fabric/tls:rw
      - /var/run:/host/var/run:rw
      - peer1.org2.example.com:/var/hyperledger/production:rw
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
volumes:
  orderer.example.com: {}
  orderer2.example.com: {}
  orderer3.example.com: {}
  orderer4.example.com: {}
  orderer5.example.com: {}
  peer0.org1.example.com: {}
  peer0.org2.example.com: {}
  peer1.org1.example.com: {}
  peer1.org2.example.com: {}